/*!
 * # Semantic UI 2.0.0 - Colorize
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Copyright 2015 Contributors
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */
;(function(h,e,f,g){h.fn.colorize=function(a){var b=(h.isPlainObject(a))?h.extend(true,{},h.fn.colorize.settings,a):h.extend({},h.fn.colorize.settings),c=arguments||false;h(this).each(function(I){var N=h(this),E=h("<canvas />")[0],L=h("<canvas />")[0],O=h("<canvas />")[0],Q=new Image(),P,A,C,H,B,G,J,M=b.colors,F=b.paths,K=b.namespace,D=b.error,d=N.data("module-"+K),R;R={checkPreconditions:function(){R.debug("Checking pre-conditions");if(!h.isPlainObject(M)||h.isEmptyObject(M)){R.error(D.undefinedColors);return false}return true},async:function(i){if(b.async){setTimeout(i,0)}else{i()}},getMetadata:function(){R.debug("Grabbing metadata");H=N.data("image")||b.image||g;B=N.data("name")||b.name||I;G=b.width||N.width();J=b.height||N.height();if(G===0||J===0){R.error(D.undefinedSize)}},initialize:function(){R.debug("Initializing with colors",M);if(R.checkPreconditions()){R.async(function(){R.getMetadata();R.canvas.create();R.draw.image(function(){R.draw.colors();R.canvas.merge()});N.data("module-"+K,R)})}},redraw:function(){R.debug("Redrawing image");R.async(function(){R.canvas.clear();R.draw.colors();R.canvas.merge()})},change:{color:function(i,j){R.debug("Changing color",i);if(M[i]===g){R.error(D.missingColor);return false}M[i]=j;R.redraw()}},canvas:{create:function(){R.debug("Creating canvases");E.width=G;E.height=J;L.width=G;L.height=J;O.width=G;O.height=J;P=E.getContext("2d");A=L.getContext("2d");C=O.getContext("2d");N.append(E);P=N.children("canvas")[0].getContext("2d")},clear:function(i){R.debug("Clearing canvas");C.fillStyle="#FFFFFF";C.fillRect(0,0,G,J)},merge:function(){if(!h.isFunction(P.blendOnto)){R.error(D.missingPlugin);return}P.putImageData(A.getImageData(0,0,G,J),0,0);C.blendOnto(P,"multiply")}},draw:{image:function(i){R.debug("Drawing image");i=i||function(){};if(H){Q.src=H;Q.onload=function(){A.drawImage(Q,0,0);i()}}else{R.error(D.noImage);i()}},colors:function(){R.debug("Drawing color overlays",M);h.each(M,function(i,j){b.onDraw(C,B,i,j)})}},debug:function(i,j){if(b.debug){if(j!==g){console.info(b.name+": "+i,j)}else{console.info(b.name+": "+i)}}},error:function(i){console.warn(b.name+": "+i)},invoke:function(i,l,k){var j;k=k||Array.prototype.slice.call(arguments,2);if(typeof i=="string"&&d!==g){i=i.split(".");h.each(i,function(m,n){if(h.isPlainObject(d[n])){d=d[n];return true}else{if(h.isFunction(d[n])){j=d[n];return true}}R.error(b.error.method);return false})}return(h.isFunction(j))?j.apply(l,k):false}};if(d!==g&&c){if(c[0]=="invoke"){c=Array.prototype.slice.call(c,1)}return R.invoke(c[0],this,Array.prototype.slice.call(c,1))}R.initialize()});return this};h.fn.colorize.settings={name:"Image Colorizer",debug:true,namespace:"colorize",onDraw:function(a,b,d,c){},async:true,colors:{},metadata:{image:"image",name:"name"},error:{noImage:"No tracing image specified",undefinedColors:"No default colors specified.",missingColor:"Attempted to change color that does not exist",missingPlugin:"Blend onto plug-in must be included",undefinedHeight:"The width or height of image canvas could not be automatically determined. Please specify a height."}}})(jQuery,window,document);