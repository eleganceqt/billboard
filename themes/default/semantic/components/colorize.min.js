/*!
 * # Semantic UI 2.0.0 - Colorize
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Copyright 2015 Contributors
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */
;(function(c,b,a,d){c.fn.colorize=function(g){var f=(c.isPlainObject(g))?c.extend(true,{},c.fn.colorize.settings,g):c.extend({},c.fn.colorize.settings),e=arguments||false;c(this).each(function(q){var l=c(this),u=c("<canvas />")[0],n=c("<canvas />")[0],k=c("<canvas />")[0],i=new Image(),j,y,w,r,x,s,p,m=f.colors,t=f.paths,o=f.namespace,v=f.error,z=l.data("module-"+o),h;h={checkPreconditions:function(){h.debug("Checking pre-conditions");if(!c.isPlainObject(m)||c.isEmptyObject(m)){h.error(v.undefinedColors);return false}return true},async:function(A){if(f.async){setTimeout(A,0)}else{A()}},getMetadata:function(){h.debug("Grabbing metadata");r=l.data("image")||f.image||d;x=l.data("name")||f.name||q;s=f.width||l.width();p=f.height||l.height();if(s===0||p===0){h.error(v.undefinedSize)}},initialize:function(){h.debug("Initializing with colors",m);if(h.checkPreconditions()){h.async(function(){h.getMetadata();h.canvas.create();h.draw.image(function(){h.draw.colors();h.canvas.merge()});l.data("module-"+o,h)})}},redraw:function(){h.debug("Redrawing image");h.async(function(){h.canvas.clear();h.draw.colors();h.canvas.merge()})},change:{color:function(A,B){h.debug("Changing color",A);if(m[A]===d){h.error(v.missingColor);return false}m[A]=B;h.redraw()}},canvas:{create:function(){h.debug("Creating canvases");u.width=s;u.height=p;n.width=s;n.height=p;k.width=s;k.height=p;j=u.getContext("2d");y=n.getContext("2d");w=k.getContext("2d");l.append(u);j=l.children("canvas")[0].getContext("2d")},clear:function(A){h.debug("Clearing canvas");w.fillStyle="#FFFFFF";w.fillRect(0,0,s,p)},merge:function(){if(!c.isFunction(j.blendOnto)){h.error(v.missingPlugin);return}j.putImageData(y.getImageData(0,0,s,p),0,0);w.blendOnto(j,"multiply")}},draw:{image:function(A){h.debug("Drawing image");A=A||function(){};if(r){i.src=r;i.onload=function(){y.drawImage(i,0,0);A()}}else{h.error(v.noImage);A()}},colors:function(){h.debug("Drawing color overlays",m);c.each(m,function(A,B){f.onDraw(w,x,A,B)})}},debug:function(A,B){if(f.debug){if(B!==d){console.info(f.name+": "+A,B)}else{console.info(f.name+": "+A)}}},error:function(A){console.warn(f.name+": "+A)},invoke:function(A,B,C){var D;C=C||Array.prototype.slice.call(arguments,2);if(typeof A=="string"&&z!==d){A=A.split(".");c.each(A,function(F,E){if(c.isPlainObject(z[E])){z=z[E];return true}else{if(c.isFunction(z[E])){D=z[E];return true}}h.error(f.error.method);return false})}return(c.isFunction(D))?D.apply(B,C):false}};if(z!==d&&e){if(e[0]=="invoke"){e=Array.prototype.slice.call(e,1)}return h.invoke(e[0],this,Array.prototype.slice.call(e,1))}h.initialize()});return this};c.fn.colorize.settings={name:"Image Colorizer",debug:true,namespace:"colorize",onDraw:function(h,g,e,f){},async:true,colors:{},metadata:{image:"image",name:"name"},error:{noImage:"No tracing image specified",undefinedColors:"No default colors specified.",missingColor:"Attempted to change color that does not exist",missingPlugin:"Blend onto plug-in must be included",undefinedHeight:"The width or height of image canvas could not be automatically determined. Please specify a height."}}})(jQuery,window,document);